image: dist.hosts.rfi:5000/dind:kub

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  
services:
- name: docker:dind
  command: ["--insecure-registry=dist.hosts.rfi:5000"]

before_script:
- docker info


stages:
  - build-identity
  - build-admin
  - deploy-pre-production-identity
  - deploy-pre-production-admin
  - deploy-production

build_identity_job:
  stage: build-identity
  script:
    - env
    - ansible-playbook ./ci.yml -t build -e "project_dir=$CI_PROJECT_DIR project=identity tag=$CI_PIPELINE_ID project_folder=Identity.STS.Identity"

build_admin_job:
  stage: build-admin
  script:
    - env
    - ansible-playbook ./ci.yml -t build -e "project_dir=$CI_PROJECT_DIR project=identity-admin tag=$CI_PIPELINE_ID project_folder=Identity.Admin"

deploy_pre_production:
  stage: deploy-pre-production-identity
#  when: manual
  script:
    - ansible-playbook ./ci.yml -t deploy-pre-production -e "project_dir=$CI_PROJECT_DIR project=identity tag=$CI_PIPELINE_ID slug=$CI_PROJECT_PATH_SLUG project_folder=Identity.STS.Identity"
  artifacts:
    paths:
      - preprod-identity.kub.yaml

deploy_pre_production_admin:
  stage: deploy-pre-production-admin
#  when: manual
  script:
    - ansible-playbook ./ci.yml -t deploy-pre-production -e "project_dir=$CI_PROJECT_DIR project=identity-admin tag=$CI_PIPELINE_ID slug=$CI_PROJECT_PATH_SLUG project_folder=Identity.Admin"
  artifacts:
    paths:
      - preprod-identity-admin.kub.yaml


deploy_production:
  stage: deploy-production
  when: manual
  script:
    - ansible-playbook ./ci.yml -t deploy-production -e "project_dir=$CI_PROJECT_DIR project=$CI_PROJECT_NAME tag=$CI_PIPELINE_ID slug=$CI_PROJECT_PATH_SLUG"
  artifacts:
    paths:
      - prod.kub.yaml
