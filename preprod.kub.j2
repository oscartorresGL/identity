{% macro env() -%}
- name: ASPNETCORE_ENVIRONMENT
  value: "Development"
- name: ASPNETCORE_URLS
  value: "http://0.0.0.0:8080"
- name: AdminConfiguration__IdentityAdminBaseUrl
  value: "http://{{ local_project_web_admin_url }}"

{% endmacro %}
---

apiVersion: extensions/v1beta1
kind: Namespace
metadata:
  name: {{ namespace }}

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  namespace: {{ namespace }}
  annotations:
    deployment.kubernetes.io/revision: "3"
    prometheus.io/scrape: "true"
    prometheus.io/scheme: "http"
    prometheus.io/port: "80"
    prometheus.io/path: "/metrics"
  creationTimestamp: null
  generation: 1
  labels:
    app: {{ project_kub }}
  name: {{ project_kub }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ project_kub }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ project_kub }}
    spec:
      containers:
      - name: {{ project_kub }}
        image: dist.hosts.rfi:5000/{{ project }}_identity:{{ tag }}
        imagePullPolicy: Always
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        env:
        {{ env () | indent(8) }}
        resources:
          limits:
            memory: "512Mi"
            cpu: "0.5"
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  namespace: {{ namespace }}
  annotations:
    deployment.kubernetes.io/revision: "3"
    prometheus.io/scrape: "true"
    prometheus.io/scheme: "http"
    prometheus.io/port: "80"
    prometheus.io/path: "/metrics"
  creationTimestamp: null
  generation: 1
  labels:
    app: {{ project_kub }}-admin
  name: {{ project_kub }}-admin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ project_kub }}-admin
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ project_kub }}-admin
    spec:
      containers:
      - name: {{ project_kub }}-admin
        image: dist.hosts.rfi:5000/{{ project }}_admin:{{ tag }}
        imagePullPolicy: Always
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        env:
        {{ env () | indent(8) }}
        resources:
          limits:
            memory: "512Mi"
            cpu: "0.5"
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30

---

apiVersion: v1
kind: Service
metadata:
  namespace: {{ namespace }}
  creationTimestamp: null
  labels:
    app: {{ project_kub }}
    promoperator-discovery: {{ project_kub }}
  name: {{ project_kub }}
spec:
  ports:
  - name: 80-8080
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: {{ project_kub }}
  sessionAffinity: None
  type: ClusterIP

---

apiVersion: v1
kind: Service
metadata:
  namespace: {{ namespace }}
  creationTimestamp: null
  labels:
    app: {{ project_kub }}-admin
    promoperator-discovery: {{ project_kub }}
  name: {{ project_kub }}-admin
spec:
  ports:
  - name: 80-8080
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: {{ project_kub }}-admin
  sessionAffinity: None
  type: ClusterIP

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: {{ namespace }}
  name: {{ project_kub }}-front
spec:
  rules:
  - host: {{ project_web_url }}
    http:
      paths:
      - path: /
        backend:
          serviceName: {{ project_kub }}
          servicePort: 80
  - host: {{ local_project_web_url }}
    http:
      paths:
      - path: /
        backend:
          serviceName: {{ project_kub }}
          servicePort: 80
- host: {{ project_web_admin_url }}
    http:
      paths:
      - path: /
        backend:
          serviceName: {{ project_kub }}-admin
          servicePort: 80
  - host: {{ local_project_web_admin_url }}
    http:
      paths:
      - path: /
        backend:
          serviceName: {{ project_kub }}-admin
          servicePort: 80

